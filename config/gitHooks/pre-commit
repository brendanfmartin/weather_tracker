#!/bin/sh

PROJECT=$(php -r "echo dirname(dirname(dirname(realpath('$0'))));")
STAGED_PHP_FILES_CMD=$(git diff --cached --name-only --diff-filter=ACMR HEAD | grep '.php')
STAGED_JS_FILES_CMD=$(git diff --cached --name-only --diff-filter=ACMR HEAD | grep '.js')

# Determine if a file list is passed
if [ "$#" -eq 1 ]
then
  oIFS=$IFS
  IFS='
  '
  SFILES="$1"
  IFS=$oIFS
fi
SFILES=${SFILES:-$STAGED_PHP_FILES_CMD}

echo "Checking PHP Lint..."
for FILE in $SFILES
do
  php -l -d display_errors=0 "$PROJECT"/"$FILE"
  if [ $? != 0 ]
  then
    echo "Fix the error before commit."
    exit 1
  fi
  FILES="$FILES $PROJECT/$FILE"
done

if [ "$FILES" != "" ]
then
  echo "Running PHP Code Sniffer..."
  vendor/bin/phpcs --standard=config/ruleset.xml --encoding=utf-8 -n -p $FILES
  if [ $? != 0 ]
  then
    echo "Fix the error before commit."
    exit 1
  fi

  echo "Running PHP Unit Tests..."
  vendor/bin/phpunit --bootstrap autoload.php tests/
  if [ $? != 0 ]
  then
    echo "Fix the error before commit."
    exit 1
  fi
fi

SFILES=${SFILES:-$STAGED_JS_FILES_CMD}

echo "Checking JS Lint..."
for FILE in $SFILES
do
  echo $FILE
  jshint --config config/.jshintrc "$PROJECT"/"$FILE"
  if [ $? != 0 ]
  then
    echo "Fix the error before commit."
    exit 1
  fi
  FILES="$FILES $PROJECT/$FILE"
done

exit $?